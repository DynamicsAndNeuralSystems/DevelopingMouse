function makeBinningPlot_withExponential_direction(numData,numThresholds,...
                                                  scaledDistance,thisDirection,...
                                                  removeBadBin)
timePoints={'E11pt5','E13pt5','E15pt5','E18pt5','P4','P14','P28'};


if scaledDistance
  filestr1='directionalityData_scaled.mat';
  filestr2=strcat('fitting_NumData_',num2str(numData),...
                  '_binnedData_numThresholds_',num2str(numThresholds),'_',thisDirection,...
                  '_scaled_goodGeneSubset','.mat');
else
  filestr1='directionalityData.mat';
  filestr2=strcat('fitting_NumData_',num2str(numData),...
                  '_binnedData_numThresholds_',num2str(numThresholds),'_',thisDirection,...
                  '_goodGeneSubset','.mat');
end
load(filestr1);
load(filestr2);

cmapOut = BF_getcmap('dark2',7,0,0);
for i=1:length(timePoints)
  f = figure('color','w','Position',get(0,'Screensize')); box('on');
  if strcmp(thisDirection,'sagittal')
    distances_all=distances_sagittal;
    corrCoeff_all=corrCoeff_sagittal;
  elseif strcmp(thisDirection,'coronal')
    distances_all=distances_coronal;
    corrCoeff_all=corrCoeff_coronal;
  elseif strcmp(thisDirection,'axial')
    distances_all=distances_axial;
    corrCoeff_all=corrCoeff_axial;
  end
  if scaledDistance
    xLabeling='Separation Distance/maxDistance';
  else
    xLabeling='Separation Distance (um)';
  end
  [~,~] = BF_PlotQuantiles_diffColor(distances_all{i},corrCoeff_all{i},numData,...
                                      numThresholds,0,cmapOut,false,...
                                      timePoints{i}, 'wholeBrain',thisDirection);
  [~,~] = plotFitting_singleTimePoint(distances_all,'exp',fitting_stat_all, 'voxel', ...
                                      xLabeling, 1, ...
                                      sprintf('binned numThresholds=%d',numThresholds),...
                                      thisDirection, timePoints{i},false, ...
                                      'wholeBrain','allCellTypes')
  if scaledDistance
    if removeBadBin
      str=fullfile('Outs',strcat('binning_plot_withExponential_',thisDirection,...
                              '_removeBadBin_scaled_goodGeneSubset'),...
                        strcat('voxel_binning_withExponential_',thisDirection,...
                              '_removeBadBin_scaled_goodGeneSubset_',...
                              timePoints{i},'.jpeg'));
    else
      str=fullfile('Outs',strcat('binning_plot_withExponential_',thisDirection,...
                              '_scaled_goodGeneSubset'),...
                        strcat('voxel_binning_withExponential_',thisDirection,...
                              '_scaled_goodGeneSubset_',...
                              timePoints{i},'.jpeg'));
    end
  else
    if removeBadBin
      str=fullfile('Outs',strcat('binning_plot_withExponential_',thisDirection,...
                                '_removeBadBin_goodGeneSubset'),...
                          strcat('voxel_binning_withExponential_',thisDirection,...
                                '_removeBadBin_goodGeneSubset_',...
                                timePoints{i},'.jpeg'));
    else
      str=fullfile('Outs',strcat('binning_plot_withExponential_',thisDirection,...
                              '_goodGeneSubset'),...
                        strcat('voxel_binning_withExponential_',thisDirection,...
                              '_goodGeneSubset_',...
                              timePoints{i},'.jpeg'));
    end
  end
  F=getframe(f);
  imwrite(F.cdata, str, 'jpeg');
end
end
